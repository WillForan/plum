######
#
# create config like:
#  sed -n '/__DATA__/,$p' plum|sed 1d > plum.conf
#
######
## setup how to find cwd from different titles
# extract from urxvt title
#   user@host:/path/to/cwd
# or tmux title
#   tmux:0:zsh - "user@host: ~/src/thing" 
parse cwd urxvt|term \w+@\S+?:\s?([~/]\S*?)"?(\s|$) $1

# show what's selected based on arguments
# maybe use like it were an acme title window
# echo '^ca(1,plum notify)notify^ca()' | dzen2 -p 
from argv
text matches ^notify$
from primary
start xmessage "$title: $text"

# search the web
from argv # text is already argv from above, but doesn't hurt here:
text matches ^search$
from primary
start xdg-open "https://www.google.com/search?q=$text"

## what to run with what matches
# open web links
# N.B. 'from primary' is necessary to reset query after 'from argv'
from primary 
text matches (https?://[^\s()]+)
start xdg-open "$1"

# file.pl line 20, near "blah blah"
text matches (\S+) line (\d+), near "(.*)"
add file=$1 line=$2 search=$3
arg isfile $file
start vimit "$file" +$line +/"$search"

# "file.py", line 20
text matches "(\S+)", line (\d+)
add file=$1 line=$2
arg isfile $file
start vimit "$file" +$line

# file.pl line 20
text matches (\S+) line (\d+)
add file=$1 line=$2
arg isfile $file
start vimit "$file" +$line

# least specific file match
text matches (\S+)
arg isfile $1
start vimit "$file"

# prompt + command ending with file
# matches  host:path\n ls file
text matches :([~/]\S+)\n(.*)\s(.*)$
start "echo '$1/$3' | xclip -i"
